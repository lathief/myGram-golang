// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "myGram API Support",
            "url": "http://swagger.io/support"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/comment": {
            "get": {
                "description": "Get comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Get comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.ResponseComment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Create a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        },
        "/comment/:commentID": {
            "get": {
                "description": "Get one comment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Get one comment by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Comment",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.ResponseComment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        },
        "/photo": {
            "get": {
                "description": "Get All Photos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "Get All Photos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.ResponsePhoto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "Create new photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestPhoto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        },
        "/photo/:photoId": {
            "get": {
                "description": "Get One photo by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "Get One photo by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the photo",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.ResponsePhoto"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "Update a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the photo",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestPhoto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Photo"
                ],
                "summary": "Delete a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the photo",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        },
        "/socialmedia": {
            "get": {
                "description": "Get All social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Get All social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entities.ResponseSocialMedia"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Create new social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        },
        "/socialmedia/:socialmediaid": {
            "get": {
                "description": "Get One social media by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Get One social media by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the social media",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entities.ResponseSocialMedia"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update by id social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Update by id social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the social media",
                        "name": "socialmediaid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by id social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Social Media"
                ],
                "summary": "Delete by id social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the social media",
                        "name": "socialmediaid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login new user",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RequestRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.RequestComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A Photo"
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "entities.RequestLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "entities.RequestPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "My Photo"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://example.com/photo.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo"
                }
            }
        },
        "entities.RequestRegister": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 18
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "test"
                }
            }
        },
        "entities.RequestSocialMedia": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "social_media_url": {
                    "type": "string"
                }
            }
        },
        "entities.ResponseComment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "Nice Photo"
                },
                "photo": {
                    "type": "object",
                    "properties": {
                        "caption": {
                            "type": "string",
                            "example": "My Photo"
                        },
                        "photo_url": {
                            "type": "string",
                            "example": "https://example.com/photo.jpg"
                        },
                        "title": {
                            "type": "string",
                            "example": "A Photo"
                        }
                    }
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "example": "test@example.com"
                        },
                        "username": {
                            "type": "string",
                            "example": "test"
                        }
                    }
                }
            }
        },
        "entities.ResponsePhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "My Photo"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://example.com/photo.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "example": "test@example.com"
                        },
                        "username": {
                            "type": "string",
                            "example": "anon"
                        }
                    }
                }
            }
        },
        "entities.ResponseSocialMedia": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Instagram"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.sosmed.com/username"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "example": "test@example.com"
                        },
                        "username": {
                            "type": "string",
                            "example": "anon"
                        }
                    }
                }
            }
        },
        "helpers.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "myGram API Documentation",
	Description:      "This is the documentation for myGram API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
